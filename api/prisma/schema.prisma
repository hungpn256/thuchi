generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum account_status {
    ACTIVE
    INACTIVE
    SUSPENDED
    DELETED
}

enum profile_status {
    ACTIVE
    INACTIVE
    DELETED
}

enum profile_user_status {
    ACTIVE
    PENDING
    REJECTED
}

enum profile_permission {
    READ
    WRITE
    ADMIN
}

model account {
    id           Int            @id(map: "PK_a3ffb1c0c8416b9fc6f907b7433") @default(autoincrement())
    email        String         @unique(map: "UQ_97672ac88f789774dd47f7c8be3") @db.VarChar
    password     String?        @db.VarChar
    googleId     String?        @db.VarChar
    status       account_status @default(ACTIVE)
    createdAt    DateTime       @default(now()) @db.Timestamp(6)
    updatedAt    DateTime       @default(now()) @db.Timestamp(6)
    deviceTokens device_token[]
    profileUsers profile_user[]
    transactions transaction[]  @relation("createdByAccount")
    savings      savings[]      @relation("savingsCreatedBy")

    @@index([email], map: "IDX_ACCOUNT_EMAIL")
}

model profile {
    id           Int            @id @default(autoincrement())
    name         String         @db.VarChar
    avatar       String?        @db.VarChar
    status       profile_status @default(ACTIVE)
    createdAt    DateTime       @default(now()) @db.Timestamp(6)
    updatedAt    DateTime       @default(now()) @db.Timestamp(6)
    categories   category[]
    transactions transaction[]
    events       event[]
    settings     settings?
    profileUsers profile_user[]
    savings      savings[]

    @@index([name], map: "IDX_PROFILE_NAME")
}

model profile_user {
    id         Int                 @id @default(autoincrement())
    profileId  Int
    accountId  Int
    status     profile_user_status @default(ACTIVE)
    permission profile_permission  @default(ADMIN)
    isDefault  Boolean             @default(false)
    createdAt  DateTime            @default(now()) @db.Timestamp(6)
    updatedAt  DateTime            @default(now()) @db.Timestamp(6)
    lastLogin  DateTime?           @db.Timestamp(6)
    profile    profile             @relation(fields: [profileId], references: [id], onDelete: Cascade)
    account    account             @relation(fields: [accountId], references: [id], onDelete: Cascade)

    @@unique([profileId, accountId])
    @@index([profileId], map: "IDX_PROFILE_USER_PROFILE")
    @@index([accountId], map: "IDX_PROFILE_USER_ACCOUNT")
}

model category {
    id           Int           @id(map: "PK_24dbc6126a28ff948da33e97d3b") @default(autoincrement())
    name         String        @db.VarChar
    profileId    Int?
    createdAt    DateTime      @default(now()) @db.Timestamp(6)
    updatedAt    DateTime      @default(now()) @db.Timestamp(6)
    profile      profile?      @relation(fields: [profileId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_13e8b2a21988bec6fdcbb1fa741")
    transactions transaction[]

    @@unique([name, profileId], map: "UQ_c9e95d6cdc8663c1a22269cb54a")
    @@index([profileId], map: "IDX_13e8b2a21988bec6fdcbb1fa74")
}

model transaction {
    type        transaction_type_enum
    amount      Decimal               @db.Decimal(12, 2)
    description String?               @db.VarChar
    date        DateTime              @db.Date
    profileId   Int
    createdAt   DateTime              @default(now()) @db.Timestamp(6)
    updatedAt   DateTime              @default(now()) @db.Timestamp(6)
    categoryId  Int?
    eventId     Int?
    id          Int                   @id(map: "PK_a219afd8dd77ed80f5a862f1db9") @default(autoincrement())
    createdById Int?
    createdBy   account?              @relation("createdByAccount", fields: [createdById], references: [id], onDelete: SetNull)
    profile     profile               @relation(fields: [profileId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_6bb58f2b6e30cb51a6504599f41")
    category    category?             @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_86e965e74f9cc66149cf6c90f64")
    event       event?                @relation(fields: [eventId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_event_transaction")

    @@index([profileId, date], map: "IDX_TRANSACTION_PROFILE_DATE")
    @@index([createdById], map: "IDX_TRANSACTION_CREATED_BY")
}

model event {
    id             Int           @id @default(autoincrement())
    name           String        @db.VarChar
    description    String?       @db.VarChar
    startDate      DateTime      @db.Timestamp(6)
    endDate        DateTime      @db.Timestamp(6)
    expectedAmount Decimal?      @db.Decimal(10, 2)
    profileId      Int
    createdAt      DateTime      @default(now()) @db.Timestamp(6)
    updatedAt      DateTime      @default(now()) @db.Timestamp(6)
    profile        profile       @relation(fields: [profileId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    transactions   transaction[]

    @@index([profileId], map: "IDX_EVENT_PROFILE")
    @@index([startDate, endDate], map: "IDX_EVENT_DATE_RANGE")
}

model settings {
    id                   Int      @id @default(autoincrement())
    profileId            Int      @unique
    defaultCurrency      String   @default("VND") @db.VarChar(3)
    language             String   @default("vi") @db.VarChar(2)
    theme                String   @default("light") @db.VarChar
    notificationsEnabled Boolean  @default(true)
    createdAt            DateTime @default(now()) @db.Timestamp(6)
    updatedAt            DateTime @default(now()) @db.Timestamp(6)
    profile              profile  @relation(fields: [profileId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@index([profileId], map: "IDX_SETTINGS_PROFILE_ID")
}

model savings {
    id          Int      @id @default(autoincrement())
    name        String   @db.VarChar(255)
    amount      Decimal  @db.Decimal(15, 3)
    assetType   String   @default("MONEY") @db.VarChar(50) // MONEY, GOLD, LAND, STOCK, CRYPTO, etc.
    unit        String   @default("VND") @db.VarChar(20) // VND, USD, gram, m2, share, etc.
    description String?  @db.VarChar(500)
    color       String?  @db.VarChar(7)
    profileId   Int
    createdById Int
    createdAt   DateTime @default(now()) @db.Timestamp(6)
    updatedAt   DateTime @default(now()) @db.Timestamp(6)
    profile     profile  @relation(fields: [profileId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    createdBy   account  @relation("savingsCreatedBy", fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@index([profileId], map: "IDX_SAVINGS_PROFILE_ID")
    @@index([assetType], map: "IDX_SAVINGS_ASSET_TYPE")
}

model device_token {
    id           Int      @id @default(autoincrement())
    accountId    Int
    deviceId     String   @db.VarChar(255)
    token        String   @db.VarChar(512)
    deviceType   String   @db.VarChar(50) // 'android', 'ios', 'web'
    deviceName   String?  @db.VarChar(255)
    deviceModel  String?  @db.VarChar(100)
    osVersion    String?  @db.VarChar(50)
    appVersion   String?  @db.VarChar(50)
    lastActiveAt DateTime @default(now()) @db.Timestamp(6)
    createdAt    DateTime @default(now()) @db.Timestamp(6)
    updatedAt    DateTime @default(now()) @db.Timestamp(6)
    account      account  @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@unique([accountId, deviceId], name: "accountId_deviceId")
    @@index([accountId], map: "IDX_DEVICE_TOKEN_ACCOUNT_ID")
    @@index([token], map: "IDX_DEVICE_TOKEN_TOKEN")
}

enum transaction_type_enum {
    INCOME
    EXPENSE
}
